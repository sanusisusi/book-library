{"version":3,"sources":["BooksAPI.js","Book.js","SearchBook.js","ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","showAll","BooksAPI","_this","setState","changeShelf","currentShelf","_this2","this","_this$props","props","thisBook","bookShelf","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","thumbnail","backgroundSize","backgroundPosition","onChange","e","target","value","disabled","title","authors","Component","SearchBook","state","shelvedBooks","updateQuery","result","error","forEach","shelvedBook","catch","console","log","_this$state","Link","to","type","placeholder","length","map","src_Book","ListBooks","filter","BooksApp","Route","exact","path","render","src_ListBooks","src_SearchBook","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9fbdb335.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass Book extends Component {\n\n    // Return All Books\n    showAll = () => {\n        BooksAPI.getAll().then((books) => {\n            this.setState({books})\n        })\n    }\n\n    // Update Book's Shelf\n    changeShelf = (book, currentShelf) => {\n        BooksAPI.update(book, currentShelf)\n            .then(this.showAll())\n    }\n\n    render() {\n\n        const {thisBook, bookShelf} = this.props\n\n        if(thisBook.imageLinks) {\n            return(\n                <li>\n                    <div className=\"book\">\n                        <div className=\"book-top\">\n                            <div \n                                className=\"book-cover\" \n                                style={{ \n                                    width: 128, \n                                    height: 193, \n                                    backgroundImage: `url(${thisBook.imageLinks.thumbnail})`,\n                                    backgroundSize: 'cover',\n                                    backgroundPosition: 'center'\n                                }}\n                            >\n                                    \n                            </div>\n                            <div className=\"book-shelf-changer\">\n                                <select onChange={(e) => {this.changeShelf(thisBook, e.target.value)}}\n                                        value={bookShelf}>\n                                    <option value=\"move\" disabled>Move to...</option>\n                                    <option value=\"currentlyReading\">Currently Reading</option>\n                                    <option value=\"wantToRead\">Want to Read</option>\n                                    <option value=\"read\">Read</option>\n                                    <option value=\"none\">None</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"book-title\">{thisBook.title}</div>\n                        <div className=\"book-authors\">{thisBook.authors ? thisBook.authors.toString() : 'Nothing!'}</div>\n                    </div>\n                </li>\n            )\n        } else {\n            return(\n                <li>\n                    <div className=\"book\">\n                        <div className=\"book-top\">\n                            <div \n                                className=\"book-cover\" \n                                style={{ \n                                    width: 128, \n                                    height: 193, \n                                    backgroundImage: `url(https://ibf.org/site_assets/img/placeholder-book-cover-default.png)`,\n                                    backgroundSize: 'cover',\n                                    backgroundPosition: 'center'\n                                }}\n                            >\n                                    \n                            </div>\n                            <div className=\"book-shelf-changer\">\n                                <select onChange={(e) => {this.changeShelf(thisBook, e.target.value)}}\n                                        value={thisBook.shelf}>\n                                    <option value=\"move\" disabled>Move to...</option>\n                                    <option value=\"currentlyReading\">Currently Reading</option>\n                                    <option value=\"wantToRead\">Want to Read</option>\n                                    <option value=\"read\">Read</option>\n                                    <option value=\"none\">None</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"book-title\">{thisBook.title}</div>\n                        <div className=\"book-authors\">{thisBook.authors ? thisBook.authors.toString() : 'Nothing!'}</div>\n                    </div>\n                </li>\n            )\n        }\n    }\n}\n\nexport default Book","import React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Link } from 'react-router-dom'\nimport Book from \"./Book\";\n\nclass SearchBook extends Component {\n\n    // State Management\n    state = {\n        query: '',\n        books: [],\n        shelvedBooks: []\n    }\n\n    // Save The Books that were asigned to a shelf\n    showAll = () => {\n        BooksAPI.getAll().then((shelvedBooks) => {\n            this.setState({shelvedBooks})\n        })\n    }\n    componentWillMount() {\n        this.showAll();\n    }\n\n\n    updateQuery = (query) => {\n        if(query) {\n            this.setState({ query })\n            BooksAPI.search(query).then(result => {\n                if (!result || result.error) {\n                    this.setState({\n                        books: []\n                    })\n                } else {\n\n                    // Search Results\n                    result.forEach((book) => {\n                        book.shelf = 'none'\n                        this.state.shelvedBooks.forEach((shelvedBook) => {\n                            if(shelvedBook.id === book.id) {\n                                book.shelf = shelvedBook.shelf\n                            }\n                        })\n                    })\n                    this.setState({books: result})\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n        } else {\n            this.setState({\n                query: '',\n                books: []\n            })\n        }\n    }\n\n    render() {\n\n        const {query, books} = this.state\n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link to='/' className=\"close-search\">Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by title or author\"\n                            value={query}\n                            onChange={(e) => this.updateQuery(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <h2>{query !== '' ? `${books.length} Books Found!` : ``}</h2>\n                    <ol className=\"books-grid\">\n                        {books.map((book) => (\n                            <Book thisBook={book} bookShelf={book.shelf}/>\n                        ))}\n                    </ol>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBook","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Book from './Book'\n\nclass ListBooks extends Component {\n\n    render() {\n\n        // Object Destructuring\n        const {books} = this.props\n\n        return (\n            <div className=\"list-books\">\n\n                <div className=\"list-books-title\">\n                    <h1>Sanusi MyReads Library</h1>\n                </div>\n\n                <div className=\"list-books-content\">\n\n                    <div>\n\n                        <div className=\"bookshelf\">\n                            <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                            <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                    {books.filter((book) => {return book.shelf === 'currentlyReading'}).map((book) => (\n                                        <Book thisBook={book} bookShelf={book.shelf}/>\n                                    ))}\n                                </ol>\n                            </div>\n                        </div>\n\n                        <div className=\"bookshelf\">\n                            <h2 className=\"bookshelf-title\">Want to Read</h2>\n                            <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                    {books.filter((book) => {return book.shelf === 'wantToRead'}).map((book) => (\n                                        <Book thisBook={book} bookShelf={book.shelf}/>\n                                    ))}\n                                </ol>\n                            </div>\n                        </div>\n\n                        <div className=\"bookshelf\">\n                            <h2 className=\"bookshelf-title\">Read</h2>\n                            <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                    {books.filter((book) => {return book.shelf === 'read'}).map((book) => (\n                                        <Book thisBook={book} bookShelf={book.shelf}/>\n                                    ))}\n                                </ol>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n                <div className=\"open-search\">\n                    <Link to='/search'>Add a book</Link>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nexport default  ListBooks","    import React, {Component} from 'react'\n    import * as BooksAPI from './BooksAPI'\n    import SearchBook from './SearchBook'\n    import ListBooks from './ListBooks'\n    import { Route } from 'react-router-dom'\n    import './App.css'\n\n    class BooksApp extends Component {\n      state = {\n        books: []\n      }\n\n        // Return All Books\n        showAll = () => {\n            BooksAPI.getAll().then((books) => {\n                this.setState({books})\n            })\n        }\n\n        // Display All Books When App Loaded\n        componentDidMount() {\n            this.showAll()\n        }\n\n      render() {\n          return (\n          <div className=\"app\">\n              <Route exact path='/' render={ () => <ListBooks books={this.state.books} showAll={this.showAll()}/> } />\n              <Route path='/search' render={ () => <SearchBook/> }/>\n              <footer>&copy; 2022 Sanusi Abdulkadir<br/>Software Engineer (React developer)</footer>\n          </div>\n        )\n      }\n    }\n\n    export default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}